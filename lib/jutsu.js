import { SensenHTMLElement } from ".";
import { SensenAppearance } from "./appearance";
import { ThemeColor } from "./theme-color";
export class KuchiyoceElement extends SensenHTMLElement {
    constructor(props) {
        super(props);
        this.props = props;
        this.$appearance = new SensenAppearance;
        this.$initialize();
        if (typeof props.main == 'function') {
            props.main(this);
        }
    }
    $initialize() {
        this.$setAppearance();
        return this;
    }
    $setAppearance() {
        this.$appearance.selectors(this.props.appearance || {}).selectors({
            $self: [
                {
                    width: '100vw',
                    height: '100vh',
                    overflow: 'hidden',
                    position: 'relative',
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    backgroundColor: ThemeColor.$('layer'),
                }
            ]
        }).mount();
        this.classList.add(this.$appearance.$UiD);
        return this;
    }
}
export class Jutsu {
    static Kuchiyose(props) {
        const tagName = `sensen-${props.name}`;
        /**
         * Initialisation du DOM
         */
        if (!customElements.get(tagName)) {
            customElements.define(tagName, KuchiyoceElement);
        }
        return new KuchiyoceElement(props);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianV0c3UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9jb3JlL2p1dHN1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLEdBQUcsQ0FBQztBQUN0QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQW9CLE1BQU0sY0FBYyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFnQjNDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxpQkFBaUM7SUFLbkUsWUFFVyxLQUFxQjtRQUk1QixLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFKTixVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQU01QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksZ0JBQWdCLENBQUM7UUFHeEMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRW5CLElBQUcsT0FBTyxLQUFLLENBQUMsSUFBSSxJQUFJLFVBQVUsRUFBQztZQUUvQixLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO1NBRW5CO0lBRUwsQ0FBQztJQUtELFdBQVc7UUFFUCxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFFdEIsT0FBTyxJQUFJLENBQUM7SUFFaEIsQ0FBQztJQUlELGNBQWM7UUFFVixJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FFdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLElBQUksRUFBRSxDQUU5QixDQUFDLFNBQVMsQ0FBQztZQUVSLEtBQUssRUFBQztnQkFFRjtvQkFDSSxLQUFLLEVBQUUsT0FBTztvQkFFZCxNQUFNLEVBQUUsT0FBTztvQkFFZixRQUFRLEVBQUUsUUFBUTtvQkFFbEIsUUFBUSxFQUFFLFVBQVU7b0JBRXBCLE9BQU8sRUFBRSxNQUFNO29CQUVmLGNBQWMsRUFBRSxRQUFRO29CQUV4QixVQUFVLEVBQUUsUUFBUTtvQkFFcEIsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO2lCQUV6QzthQUVKO1NBRUosQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRVgsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUUsQ0FBQTtRQUUzQyxPQUFPLElBQUksQ0FBQztJQUVoQixDQUFDO0NBTUo7QUFLRCxNQUFNLE9BQU8sS0FBSztJQUdkLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBcUI7UUFFbEMsTUFBTSxPQUFPLEdBQUcsVUFBVyxLQUFLLENBQUMsSUFBSyxFQUFFLENBQUM7UUFFekM7O1dBRUc7UUFDSCxJQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBQztZQUU1QixjQUFjLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFBO1NBRW5EO1FBR0QsT0FBTyxJQUFJLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRXZDLENBQUM7Q0FNSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlbnNlbkhUTUxFbGVtZW50IH0gZnJvbSBcIi5cIjtcbmltcG9ydCB7IFNlbnNlbkFwcGVhcmFuY2UsIFRBcHBlYXJhbmNlUHJvcHMgfSBmcm9tIFwiLi9hcHBlYXJhbmNlXCI7XG5pbXBvcnQgeyBUaGVtZUNvbG9yIH0gZnJvbSBcIi4vdGhlbWUtY29sb3JcIjtcblxuXG5leHBvcnQgdHlwZSBLdWNoaXlvY2VQcm9wcyA9IHtcblxuICAgIG5hbWU6IHN0cmluZztcblxuICAgIGFwcGVhcmFuY2U/OiBUQXBwZWFyYW5jZVByb3BzO1xuXG4gICAgbWFpbjogKGNhbnZhczogSFRNTEVsZW1lbnQpID0+IHZvaWRcbiAgICBcbn1cblxuXG5cblxuZXhwb3J0IGNsYXNzIEt1Y2hpeW9jZUVsZW1lbnQgZXh0ZW5kcyBTZW5zZW5IVE1MRWxlbWVudDxLdWNoaXlvY2VQcm9wcz57XG5cbiAgICBcbiAgICAkYXBwZWFyYW5jZTogU2Vuc2VuQXBwZWFyYW5jZTtcblxuICAgIGNvbnN0cnVjdG9yIChcblxuICAgICAgICBwdWJsaWMgcHJvcHM6IEt1Y2hpeW9jZVByb3BzXG5cbiAgICApe1xuXG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLiRhcHBlYXJhbmNlID0gbmV3IFNlbnNlbkFwcGVhcmFuY2U7XG5cblxuICAgICAgICB0aGlzLiRpbml0aWFsaXplKCk7XG5cbiAgICAgICAgaWYodHlwZW9mIHByb3BzLm1haW4gPT0gJ2Z1bmN0aW9uJyl7XG5cbiAgICAgICAgICAgIHByb3BzLm1haW4odGhpcylcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cblxuXG5cblxuICAgICRpbml0aWFsaXplKCl7XG5cbiAgICAgICAgdGhpcy4kc2V0QXBwZWFyYW5jZSgpO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICBcbiAgICB9XG5cblxuXG4gICAgJHNldEFwcGVhcmFuY2UoKXtcblxuICAgICAgICB0aGlzLiRhcHBlYXJhbmNlLnNlbGVjdG9ycyhcblxuICAgICAgICAgICAgdGhpcy5wcm9wcy5hcHBlYXJhbmNlIHx8IHt9XG4gICAgICAgICAgICBcbiAgICAgICAgKS5zZWxlY3RvcnMoe1xuXG4gICAgICAgICAgICAkc2VsZjpbXG5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwdncnLFxuXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogJzEwMHZoJyxcblxuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG5cbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG5cbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcblxuICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcblxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFRoZW1lQ29sb3IuJCgnbGF5ZXInKSxcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgXG4gICAgICAgIH0pLm1vdW50KCk7XG5cbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCB0aGlzLiRhcHBlYXJhbmNlLiRVaUQgKVxuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG59XG5cblxuXG5cbmV4cG9ydCBjbGFzcyBKdXRzdXtcblxuXG4gICAgc3RhdGljIEt1Y2hpeW9zZShwcm9wczogS3VjaGl5b2NlUHJvcHMpe1xuXG4gICAgICAgIGNvbnN0IHRhZ05hbWUgPSBgc2Vuc2VuLSR7IHByb3BzLm5hbWUgfWA7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluaXRpYWxpc2F0aW9uIGR1IERPTVxuICAgICAgICAgKi9cbiAgICAgICAgaWYoIWN1c3RvbUVsZW1lbnRzLmdldCh0YWdOYW1lKSl7XG5cbiAgICAgICAgICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZSh0YWdOYW1lLCBLdWNoaXlvY2VFbGVtZW50KVxuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgXG5cbiAgICAgICAgcmV0dXJuIG5ldyBLdWNoaXlvY2VFbGVtZW50KHByb3BzKTtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG59XG5cbiJdfQ==